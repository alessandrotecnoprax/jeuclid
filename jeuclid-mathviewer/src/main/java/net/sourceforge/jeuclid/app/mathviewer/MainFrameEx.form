<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.7" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <NonVisualComponents>
    <Container class="javax.swing.JPopupMenu" name="contextMenu">

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">
        <Property name="useNullLayout" type="boolean" value="true"/>
      </Layout>
      <SubComponents>
        <Menu class="javax.swing.JMenu" name="insertMenu">
          <Properties>
            <Property name="text" type="java.lang.String" value="Einfuegen"/>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="insertTableMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Tabelle..."/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="insertTableMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="insertPolynomMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" value="Polynom..."/>
              </Properties>
              <Events>
                <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="insertPolynomMenuItemActionPerformed"/>
              </Events>
            </MenuItem>
            <Menu class="javax.swing.JMenu" name="logicsMenu">
              <Properties>
                <Property name="text" type="java.lang.String" value="Logik"/>
              </Properties>
              <SubComponents>
                <MenuItem class="javax.swing.JMenuItem" name="orMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="OR"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="orMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="andMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="AND"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="andMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="notMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="NOT"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="notMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
              </SubComponents>
            </Menu>
            <Menu class="javax.swing.JMenu" name="greekMenu">
              <Properties>
                <Property name="text" type="java.lang.String" value="Griechisch"/>
              </Properties>
              <SubComponents>
                <MenuItem class="javax.swing.JMenuItem" name="alphaMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="Alpha"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="alphaMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="betaMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="Beta"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="betaMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="gammaMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="Gamma"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="gammaMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="deltaMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="Delta"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="deltaMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="epsilonMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="Epsilon"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="epsilonMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="zetaMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="Zeta"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="zetaMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
                <MenuItem class="javax.swing.JMenuItem" name="omegaMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="Omega"/>
                  </Properties>
                  <Events>
                    <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="omegaMenuItemActionPerformed"/>
                  </Events>
                </MenuItem>
              </SubComponents>
            </Menu>
            <Menu class="javax.swing.JMenu" name="combinatoricsMenu">
              <Properties>
                <Property name="text" type="java.lang.String" value="Kombinatorik"/>
              </Properties>
              <SubComponents>
                <MenuItem class="javax.swing.JMenuItem" name="overMenuItem">
                  <Properties>
                    <Property name="text" type="java.lang.String" value="n &#xfc;ber k"/>
                  </Properties>
                </MenuItem>
              </SubComponents>
            </Menu>
          </SubComponents>
        </Menu>
        <MenuItem class="javax.swing.JMenuItem" name="refreshCMenuItem">
          <Properties>
            <Property name="text" type="java.lang.String" value="Aktuallisieren"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="refreshCMenuItemActionPerformed"/>
          </Events>
        </MenuItem>
      </SubComponents>
    </Container>
    <Menu class="javax.swing.JMenuBar" name="jMenuBar">
      <SubComponents>
        <Menu class="javax.swing.JMenu" name="fileMenu">
          <Properties>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="Messages.getString(&quot;MathViewer.FileMenu&quot;)" type="code"/>
            </Property>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="exitMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages.getString(&quot;MathViewer.exit&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="exitMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    KeyEvent.VK_Q, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));&#xa;exitMenuItem.addActionListener(new ActionListener() {&#xa;                public void actionPerformed(final ActionEvent e) {&#xa;                    System.exit(0);&#xa;                }&#xa;            });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="exportMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages&#xa;                    .getString(&quot;MathViewer.export&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="exportMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    KeyEvent.VK_S, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));&#xa;            exportMenuItem&#xa;                    .addActionListener(new java.awt.event.ActionListener() {&#xa;                        public void actionPerformed(&#xa;                                final java.awt.event.ActionEvent e) {&#xa;                            MainFrameEx.this.exportFile();&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="openMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages.getString(&quot;MathViewer.open&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="openMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    KeyEvent.VK_O, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));&#xa;            openMenuItem&#xa;                    .addActionListener(new java.awt.event.ActionListener() {&#xa;                        public void actionPerformed(&#xa;                                final java.awt.event.ActionEvent e) {&#xa;                            MainFrameEx.this.openFile();&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="editMenu">
          <Properties>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="Messages.getString(&quot;MathViewer.EditMenu&quot;)" type="code"/>
            </Property>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="formattedCopyMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages&#xa;                    .getString(&quot;MathViewer.formattedCopy&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="formattedCopyMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    KeyEvent.VK_C, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask()&#xa;                            | InputEvent.SHIFT_DOWN_MASK, true));&#xa;&#xa;formattedCopyMenuItem&#xa;                    .addActionListener(new ActionListener() {&#xa;                        public void actionPerformed(final ActionEvent e) {&#xa;                            MainFrameEx.this.copyToClipboard(true);&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="pasteMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages.getString(&quot;MathViewer.paste&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="pasteMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    KeyEvent.VK_V, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));&#xa;&#xa;            pasteMenuItem.addActionListener(new ActionListener() {&#xa;                public void actionPerformed(final ActionEvent e) {&#xa;                    MainFrameEx.this.pasteFromClipboard();&#xa;                }&#xa;            });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="unformattedCopyMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages&#xa;    .getString(&quot;MathViewer.unformattedCopy&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="unformattedCopyMenuItem.setAccelerator(KeyStroke&#xa;                    .getKeyStroke(KeyEvent.VK_C, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));&#xa;&#xa;unformattedCopyMenuItem&#xa;                    .addActionListener(new ActionListener() {&#xa;                        public void actionPerformed(final ActionEvent e) {&#xa;                            MainFrameEx.this.copyToClipboard(false);&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="viewMenu">
          <Properties>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="Messages.getString(&quot;MathViewer.viewMenu&quot;)" type="code"/>
            </Property>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JCheckBoxMenuItem" name="aliasMenuItem">
              <Properties>
                <Property name="selected" type="boolean" value="true"/>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages.getString(&quot;MathViewer.alias&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="aliasMenuItem.setSelected((Boolean) LayoutContextImpl&#xa;                    .getDefaultLayoutContext().getParameter(&#xa;                            Parameter.ANTIALIAS));&#xa;            aliasMenuItem&#xa;                    .addItemListener(new java.awt.event.ItemListener() {&#xa;                        public void itemStateChanged(&#xa;                                final java.awt.event.ItemEvent e) {&#xa;                            MainFrameEx.this.getMathComponent()&#xa;                                    .setParameter(&#xa;                                            Parameter.ANTIALIAS,&#xa;                                            MainFrameEx.this.aliasMenuItem&#xa;                                                    .isSelected());&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="smallerMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages&#xa;    .getString(&quot;MathViewer.textSmaller&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="smallerMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    /*KeyEvent.VK_SUBTRACT, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));*/&#xa;                    KeyEvent.VK_MINUS, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));&#xa;&#xa;            smallerMenuItem&#xa;                    .addActionListener(new java.awt.event.ActionListener() {&#xa;                        public void actionPerformed(&#xa;                                final java.awt.event.ActionEvent e) {&#xa;                            final JMathComponent jmc = MainFrameEx.this&#xa;                                    .getMathComponent();&#xa;                            jmc.setFontSize(jmc.getFontSize()&#xa;                                    / MainFrameEx.FONT_SIZE_MULTIPLICATOR);&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="biggerMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages&#xa;    .getString(&quot;MathViewer.textBigger&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="biggerMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    /*KeyEvent.VK_ADD, Toolkit.getDefaultToolkit()&#xa;                            .getMenuShortcutKeyMask(), true));*/&#xa;                    KeyEvent.VK_PLUS, Toolkit.getDefaultToolkit()&#xa;                    .getMenuShortcutKeyMask(), true));&#xa;            biggerMenuItem&#xa;                    .addActionListener(new java.awt.event.ActionListener() {&#xa;                        public void actionPerformed(&#xa;                                final java.awt.event.ActionEvent e) {&#xa;                            final JMathComponent jmc = MainFrameEx.this&#xa;                                    .getMathComponent();&#xa;                            jmc.setFontSize(jmc.getFontSize()&#xa;                                    * MainFrameEx.FONT_SIZE_MULTIPLICATOR);&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JCheckBoxMenuItem" name="debugMenuItem">
              <Properties>
                <Property name="selected" type="boolean" value="true"/>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages.getString(&quot;MathViewer.debug&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="debugMenuItem.setSelected((Boolean) LayoutContextImpl&#xa;                    .getDefaultLayoutContext().getParameter(Parameter.DEBUG));&#xa;            debugMenuItem&#xa;                    .addItemListener(new java.awt.event.ItemListener() {&#xa;                        public void itemStateChanged(&#xa;                                final java.awt.event.ItemEvent e) {&#xa;                            MainFrameEx.this.getMathComponent()&#xa;                                    .setParameter(&#xa;                                            Parameter.DEBUG,&#xa;                                            MainFrameEx.this.debugMenuItem&#xa;                                                    .isSelected());&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
            <MenuItem class="javax.swing.JMenuItem" name="refreshMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages&#xa;                    .getString(&quot;MathViewer.textRefresh&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="refreshMenuItem.setAccelerator(KeyStroke.getKeyStroke(&#xa;                    KeyEvent.VK_Y, Toolkit.getDefaultToolkit()&#xa;                     .getMenuShortcutKeyMask(), true));&#xa;            refreshMenuItem&#xa;                    .addActionListener(new java.awt.event.ActionListener() {&#xa;                        public void actionPerformed(&#xa;                                final java.awt.event.ActionEvent e) {&#xa;                            MainFrameEx.this.updateFromTextArea();&#xa;                        }&#xa;                    });"/>
              </AuxValues>
            </MenuItem>
          </SubComponents>
        </Menu>
        <Menu class="javax.swing.JMenu" name="helpMenu">
          <Properties>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="Messages.getString(&quot;MathViewer.helpMenu&quot;)" type="code"/>
            </Property>
          </Properties>
          <SubComponents>
            <MenuItem class="javax.swing.JMenuItem" name="aboutMenuItem">
              <Properties>
                <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code="Messages&#xa;                    .getString(&quot;MathViewer.aboutMenuItem&quot;)" type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="aboutMenuItem.addActionListener(new ActionListener() {&#xa;                public void actionPerformed(final ActionEvent e) {&#xa;                    MainFrameEx.this.displayAbout();&#xa;                }&#xa;            });"/>
              </AuxValues>
            </MenuItem>
          </SubComponents>
        </Menu>
      </SubComponents>
    </Menu>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
    <Property name="name" type="java.lang.String" value="frameMain" noResource="true"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="menuBar" type="java.lang.String" value="jMenuBar"/>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,44,0,0,2,45"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jContentPane">
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="Center"/>
        </Constraint>
      </Constraints>

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Component id="splitPane" alignment="0" pref="557" max="32767" attributes="0"/>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Component id="splitPane" alignment="0" pref="277" max="32767" attributes="0"/>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Container class="javax.swing.JSplitPane" name="splitPane">
          <Properties>
            <Property name="orientation" type="int" value="0"/>
            <Property name="resizeWeight" type="double" value="1.0"/>
            <Property name="oneTouchExpandable" type="boolean" value="true"/>
          </Properties>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JSplitPaneSupportLayout"/>
          <SubComponents>
            <Container class="javax.swing.JScrollPane" name="scrollPane2">
              <Properties>
                <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
                  <Dimension value="[50, 50]"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="scrollPane2.setViewportView(this.getXMLEditor());&#xa;&#xa;            if (MathViewer.OSX) {&#xa;                scrollPane2.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);&#xa;                scrollPane2.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);&#xa;            }"/>
              </AuxValues>
              <Constraints>
                <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JSplitPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JSplitPaneSupportLayout$JSplitPaneConstraintsDescription">
                  <JSplitPaneConstraints position="right"/>
                </Constraint>
              </Constraints>

              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
            </Container>
            <Container class="javax.swing.JScrollPane" name="scrollPane">
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="scrollPane.setViewportView(this.getMathComponent());&#xa;&#xa;if (MathViewer.OSX) {&#xa;scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);&#xa;scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);&#xa;}"/>
              </AuxValues>
              <Constraints>
                <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JSplitPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JSplitPaneSupportLayout$JSplitPaneConstraintsDescription">
                  <JSplitPaneConstraints position="left"/>
                </Constraint>
              </Constraints>

              <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
            </Container>
          </SubComponents>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
