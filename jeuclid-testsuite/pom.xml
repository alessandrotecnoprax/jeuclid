<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.sourceforge.jeuclid</groupId>
  <artifactId>jeuclid-testsuite</artifactId>
  <packaging>war</packaging>
  <version>3.1.0-SNAPSHOT</version>
  <name>jeuclid-testsuite Maven Webapp</name>
  <parent>
    <groupId>net.sourceforge.jeuclid</groupId>
    <artifactId>jeuclid-parent</artifactId>
    <version>3.1.0-SNAPSHOT</version>
  </parent>
  <dependencies>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.jeuclid</groupId>
      <artifactId>jeuclid-foprep</artifactId>
      <version>3.1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.xmlgraphics</groupId>
      <artifactId>batik-svggen</artifactId>
      <version>1.7</version>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis-ext</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xalan</groupId>
          <artifactId>xalan</artifactId>
        </exclusion>
      </exclusions>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.jeuclid</groupId>
      <artifactId>dejavu-fonts</artifactId>
      <version>2.23</version>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.jeuclid</groupId>
      <artifactId>stix-fonts</artifactId>
      <version>1.0-beta</version>
    </dependency>
  </dependencies>
  <build>
    <finalName>jeuclid-testsuite</finalName>
    <plugins>
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <configuration>
          <scanIntervalSeconds>5</scanIntervalSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo.groovy</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>site</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <classpath>
                <element>
                  <groupId>net.sourceforge.jeuclid</groupId>
                  <artifactId>jeuclid-foprep</artifactId>
                </element>
                <element>
                  <groupId>net.sourceforge.jeuclid</groupId>
                  <artifactId>dejavu-fonts</artifactId>
                </element>
                <element>
                  <groupId>net.sourceforge.jeuclid</groupId>
                  <artifactId>stix-fonts</artifactId>
                </element>
              </classpath>
              <source>
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.xml.transform.TransformerException;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;
import net.sourceforge.jeuclid.app.foprep.Processor;

scanner = ant.fileScanner {
  fileset(dir:"${project.basedir}/src/main/resources") {
    include(name:"**/*")
  }
}

def target = "target/site/svg"

for (f in scanner) {
  f2 = new File(f.getPath().replace("src/main/resources","target/site/svg"))
  ant.mkdir(dir: f2.getParent())

  def processed = false;

  if (f.getPath().endsWith(".xml")) {
    def inputSource = new StreamSource(new FileInputStream(f))
    def result = new StreamResult(new FileOutputStream(f2))
    try {
      Processor.getProcessor().process(inputSource, result);
      processed = true;
    } catch (final TransformerException te) {
      processed = false;
    } catch (final NullPointerException npe) {
      processed = false;
    }
  }
 
  if (!processed) {
    ant.copy(file: f, tofile:f2)
  }
}
                </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
